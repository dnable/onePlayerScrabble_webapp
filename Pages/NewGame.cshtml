@page
@model OnePlayerScrabble.Pages.NewGameModel
@{
    ViewData["Title"] = "New Game";
}

<div class="text-center"> 


<h1>Current Letters</h1>
<br />
<br />

    <!--TODO:
        1. Track score
        2. Display remaining available letters in letter bag
    -->

    @{
        //Dictionary of <Letter, [PoolofLetter Available, LetterPointValue]        
        IDictionary<char, int> letterPool = new Dictionary<char, int>()
        {
            {'A', 9 }, {'B', 2 }, {'C', 2 }, {'D', 4 }, {'E', 12 }, {'F', 2 }, {'G', 3 },
            {'H', 2 }, {'I', 9 }, {'J', 1 }, {'K', 1 }, {'L', 4 }, {'M', 2}, {'N', 6 },
            {'O', 8 }, {'P', 2 }, {'Q', 1 }, {'R', 6 }, {'S', 4 }, {'T', 6 }, {'U', 4 },
            {'V', 2 }, {'W', 2}, {'X', 1 }, {'Y', 2 }, {'Z', 1}

        };

        List<char> letterBag = new List<char>();

        foreach (char a in letterPool.Keys)
        {
            for(int i = 0; i < letterPool[a]; i++)
            {
                letterBag.Add(a);
            };
        };

        List<char> lettersPlayable = new List<char>();
        Random random = new Random();
        for(int i =0; i < 7; i++)
        {
            int num = random.Next(letterBag.Count());
            lettersPlayable.Add(letterBag[num]);
            letterBag.Remove(letterBag[num]);
        }
        

    }


    <!--Playable Letters-->
    @foreach (char a in lettersPlayable)
    {       
       <strong style="font-size:large">  @a  </strong>
    }

    <!--User inputs-->
 @*   <br />
    <input type="text" asp-for="PlayLetter1" maxlength="1">
    <input type="text" asp-for="PlayLetter2" maxlength="1">

    <br />
    <br />
    <h3>Played Word</h3>
    <p>@Model.PlayLetter1 @Model.PlayLetter2</p>*@

    
        
</div>

